// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class NetAnnouncement {
    bb: flatbuffers.ByteBuffer | null = null;
    bb_pos = 0;
    __init(i: number, bb: flatbuffers.ByteBuffer): NetAnnouncement {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }

    static getRootAsNetAnnouncement(bb: flatbuffers.ByteBuffer, obj?: NetAnnouncement): NetAnnouncement {
        return (obj || new NetAnnouncement()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    static getSizePrefixedRootAsNetAnnouncement(bb: flatbuffers.ByteBuffer, obj?: NetAnnouncement): NetAnnouncement {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new NetAnnouncement()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }

    text(): string | null;
    text(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    text(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 4);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    type(): string | null;
    type(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    type(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 6);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    pointsdelta(): number {
        const offset = this.bb!.__offset(this.bb_pos, 8);
        return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
    }

    extradata(): string | null;
    extradata(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    extradata(optionalEncoding?: any): string | Uint8Array | null {
        const offset = this.bb!.__offset(this.bb_pos, 10);
        return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    }

    static startNetAnnouncement(builder: flatbuffers.Builder) {
        builder.startObject(4);
    }

    static addText(builder: flatbuffers.Builder, textOffset: flatbuffers.Offset) {
        builder.addFieldOffset(0, textOffset, 0);
    }

    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {
        builder.addFieldOffset(1, typeOffset, 0);
    }

    static addPointsdelta(builder: flatbuffers.Builder, pointsdelta: number) {
        builder.addFieldInt32(2, pointsdelta, 0);
    }

    static addExtradata(builder: flatbuffers.Builder, extradataOffset: flatbuffers.Offset) {
        builder.addFieldOffset(3, extradataOffset, 0);
    }

    static endNetAnnouncement(builder: flatbuffers.Builder): flatbuffers.Offset {
        const offset = builder.endObject();
        return offset;
    }

    static createNetAnnouncement(
        builder: flatbuffers.Builder,
        textOffset: flatbuffers.Offset,
        typeOffset: flatbuffers.Offset,
        pointsdelta: number,
        extradataOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
        NetAnnouncement.startNetAnnouncement(builder);
        NetAnnouncement.addText(builder, textOffset);
        NetAnnouncement.addType(builder, typeOffset);
        NetAnnouncement.addPointsdelta(builder, pointsdelta);
        NetAnnouncement.addExtradata(builder, extradataOffset);
        return NetAnnouncement.endNetAnnouncement(builder);
    }
}
